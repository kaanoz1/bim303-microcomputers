
MOV AH, 00h
INT 1Ah
MOV RANDOM_NUMBER_COMP,AL 




CALL PICK_RANDOM_GENERAL

CALL PRINT_BLUE


ENTER:

MOV DX, OFFSET MSG
MOV AH, 9
INT 21H


NUMBER_INPUT_CONT:
MOV AH,00H
INT 16H
CMP AL, '0'
JL NUMBER_INPUT_CONT
CMP AL, '9'
JG NUMBER_INPUT_CONT
MOV AH,0EH
INT 10H

MOV AH,0

SUB AX,30H
MOV SI, AX     
  

CALL PICK_RANDOM_COMP

CALL PRINT_LABEL


CALL PRINT_RESULT



MOV DX, OFFSET NEWLINE
MOV AH, 9
INT 21H
JMP ENTER:


RET



NUMBERS DB 00111111b, 00000110b, 01011011b, 01001111b, 01100110b, 01101101b, 01111101b, 00000111b, 01111111b, 01101111b
DOTS_U_WINS DB 01111111b, 01000000b, 01000000b, 01000000b, 01111111b ;U
DB 00000000b, 00000000b, 00000000b, 00000000b, 00000000b ;
DB 01111111b, 00100000b, 00011000b, 00100000b, 01111111b ;W
DB 00000000b, 00000000b, 01111111b, 00000000b, 00000000b ;I
DB 01111111b, 00000100b, 00001000b, 00010000b, 01111111b ;N
DB 01001111b, 01001001b, 01001001b, 01001001b, 01111001b ;S
DB 00000000b, 00000000b, 00000000b, 00000000b, 00000000b ;
DB 00000000b, 00000000b, 00000000b, 00000000b, 00000000b ;
DOTS_C_WINS DB 00111110b, 01000001b, 01000001b, 01000001b, 00100010b ;C
DB 00000000b, 00000000b, 00000000b, 00000000b, 00000000b ;
DB 01111111b, 00100000b, 00011000b, 00100000b, 01111111b ;W
DB 00000000b, 00000000b, 01111111b, 00000000b, 00000000b ;I
DB 01111111b, 00000100b, 00001000b, 00010000b, 01111111b ;N
DB 01001111b, 01001001b, 01001001b, 01001001b, 01111001b ;S
DB 00000000b, 00000000b, 00000000b, 00000000b, 00000000b ;
DB 00000000b, 00000000b, 00000000b, 00000000b, 00000000b ;
DOTS_TIE DB 00000000b, 00000000b, 01111111b, 00000000b, 00000000b ;I
DB 00000001b, 00000001b, 01111111b, 00000001b, 00000001b ;T
DB 01001111b, 01001001b, 01001001b, 01001001b, 01111001b ;S
DB 00000000b, 00000000b, 00000000b, 00000000b, 00000000b ;
DB 00000001b, 00000001b, 01111111b, 00000001b, 00000001b ;T
DB 00000000b, 00000000b, 01111111b, 00000000b, 00000000b ;I
DB 01111111b, 01001001b, 01001001b, 01001001b, 01000001b ;E
DB 00000000b, 00000000b, 00000000b, 00000000b, 00000000b ;
                                        
NEWLINE DB 13, 10, "$"
MSG DB "Enter a number a between 0-9: $"

RANDOM_NUMBER_COMP DB 0

SEVENSEGMENTADDRESS DW 2030H

UPOINTINDEX DW 2032H
CPOINTINDEX DW 2037H

ASCII_BLUE  DB 'RANDOM NUMBER: '

   
PROC PRINT_LABEL
    
                
MOV DX,0
MOV DX, SEVENSEGMENTADDRESS

MOV AX, 00111110b
OUT DX, AX

INC DX
MOV AX, 01000000b

OUT DX,AX

MOV AX,0

INC DX
MOV AL, NUMBERS[SI]

OUT DX,AL

INC DX
INC DX

INC DX

MOV AX, 00111001b
OUT DX,AX
          
INC DX
MOV AX, 01000000b

OUT DX,AX

MOV AX,0

INC DX
MOV AX,WORD PTR NUMBERS[DI]

OUT DX,AX
          
  
RET

ENDP


PROC PRINT_BLUE
    PUSH SI
    PUSH BP
    
 	MOV DX, 2040h
	MOV SI, 0
	MOV CX, 15

NEXT:
	MOV AL, ASCII_BLUE[SI]
	out DX,AL
	INC SI
	INC DX

	LOOP NEXT   
	
	
	
	MOV AX,BP
	ADD AX,30H
	OUT DX,AX
	
	POP BP
	POP SI
	
RET
    

ENDP

PROC PICK_RANDOM_COMP

    MOV DI, 0           

    MOV AH, 00h          
    INT 1Ah             

    MOV AX, DX          
    MOV DX, 0           

    MOV BX, 10          
    DIV BX              

    MOV DI, DX          

    RET                 

ENDP 

PROC PICK_RANDOM_GENERAL

    MOV BP, 0            

    MOV AH, 00h         
    INT 1Ah             

    MOV AX, DX           
    XOR DX, DX          

    MOV BX, 10           
    DIV BX              

    MOV BP, DX          

    RET                  

ENDP

PROC PRINT_RESULT

    MOV AX, SI        
    SUB AX, BP        
    JNS SI_NOT_NEG   
    NEG AX          
SI_NOT_NEG:
    MOV CX, AX        

    MOV AX, DI        
    SUB AX, BP        
    JNS DI_NOT_NEG    
    NEG AX            
DI_NOT_NEG:
    MOV DX, AX       

    CMP CX, DX
    JE ITS_TIE        
    JL U_WINS        
    JG C_WINS        

ITS_TIE:
    
    MOV DX,2000h
	MOV BX, 0

MAINLOOP0:
	MOV SI, 0
	MOV CX, 5

NEXT0:
	MOV AL,DOTS_TIE[BX][SI]
	out dx,al
	INC SI
	INC DX

	CMP SI, 5
	LOOPNE NEXT0

	ADD BX, 5
	CMP BX, 40
	JL MAINLOOP0
       
    
    JMP ENDPROCESS

U_WINS:
        MOV DX,2000h
	MOV BX, 0

MAINLOOP1:
	MOV SI, 0
	MOV CX, 5

NEXT1:
	MOV AL,DOTS_U_WINS[BX][SI]
	out dx,al
	INC SI
	INC DX

	CMP SI, 5
	LOOPNE NEXT1

	ADD BX, 5
	CMP BX, 40
	JL MAINLOOP1
    JMP ENDPROCESS

C_WINS:
        MOV DX,2000h
	MOV BX, 0

MAINLOOP2:
	MOV SI, 0
	MOV CX, 5

NEXT2:
	MOV AL,DOTS_C_WINS[BX][SI]
	out dx,al
	INC SI
	INC DX

	CMP SI, 5
	LOOPNE NEXT2

	ADD BX, 5
	CMP BX, 40
	JL MAINLOOP2
    JMP ENDPROCESS

ENDPROCESS:
    RET

ENDP



END